name: CI • lint • test • docker

on:
  pull_request: 
  push:
    branches: (main]

env:
  REGISTRY: ghcr.io

permissions:
  contents: read 
  packages: write

jobs:
  #----1) Lint —
  lint:
    runs-on: ubuntu-22.04 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@5
        with:
          python-version: "3.11"
      - name: Install ruff
        run: python -m pip install --quiet ruff
      - name: Run ruff 
        run: ruff check •

#-----2) ----Test
test:
  needs: lint 
  runs-on: ubuntu-22.04-
    - uses: actions/setup-python@v5 
      with:
        python-version: "3.11"
    - uses: actions/cache@v4 
      with:
        path: ~/.cache/pip
        key: pip-${{ hashFiles('requirements.txt') }}-${{ runner.os }}-${{ github.run_id }}
    - name: Install deps & pytest
      run: |
        python -m pip install --quiet -r requirements.txt pytest
    - name: Run pytest 
      run: pytest -q

  #- 3) Build & Push Docker —
  docker:
    needs: test
    if: github.event_name = 'push' && github.ref = 'refs/heads/main• 
    runs-on: ubuntu-22.04 
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-gemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-actionav3
        with: 
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN || secrets.GITHUB_TOKEN }}
      - id: prep
        run: echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
      - uses: docker/build-push-action@v5 
        with:
          context: .
          • push: true 
            platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ steps.prep.outputs.repo }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ steps.prep.outputs.repo }}: latest 
          cache-from: type=gha 
          cache-to: type=gha,mode=max